// Copyright by Barry G. Becker, 2013. Licensed under MIT License: http://www.opensource.org/licenses/MIT

/**
 * This is common gradle build file used to publish bb4 artifacts.
 * Any project on github can include it using
 * apply from: 'https://raw.github.com/barrybecker4/bb4-common/master/bb4-publish.gradle'
 *
 * If a project has multiple jars, it should define the list of tasks
 * in an array called jarTasks before applying this bb4-publish.gradle file.
 */
if (!hasProperty('jarTasks')) {
    ext.jarTasks = []
}

/**
 * These artifacts need to be published so other projects can depend on them.
 * The default jar is only include if there is not an explicit list of jarTasks.
 */
artifacts {
    if (jarTasks.size() == 0)
        archives jar

    artifacts {
        jarTasks.each{ jarTask -> archives jarTask }
    }

    archives sourcesJar
    archives javadocJar
}

/**
 * Used to publish artifacts to Sonatype repository
 * See http://jedicoder.blogspot.com/2011/11/automated-gradle-project-deployment-to.html
 * Go to https://oss.sonatype.org to view staged repositories after publishing.
 */
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name "${archivesBaseName}"
                packaging 'jar'
                description 'Common bb4 java code. Library project.'
                url "https://github.com/barrybecker4/${archivesBaseName}"

                // workaround to get changing snapshots to be updated
                properties {
                   'timestamp' String.valueOf(System.currentTimeMillis())
                }

                scm {
                    url "scm:git@github.com:barrybecker4/${archivesBaseName}.git"
                    connection "scm:git@github.com:barrybecker4/${archivesBaseName}.git"
                    developerConnection "scm:git@github.com:barrybecker4/${archivesBaseName}.git"
                }

                licenses {
                    license {
                        name 'The MIT license'
                        url 'http://www.opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'barrybecker4'
                        name 'Barry Becker'
                    }
                }
            }
            // creates filters for each jar produced by jarTasks (if needed)
            jarTasks.each{ jarTask ->
                def jarName = 'bb4-' + jarTask.name - 'Jar'
                def jarPom = addFilter(jarTask.name) {artifact, file ->
                    artifact.name == jarName
                }
                jarPom.artifactId = jarName
                jarPom.name = jarName
                jarPom.description = jarName
                jarPom.url = "https://github.com/barrybecker4/${archivesBaseName}"
            }
        }
    }
}

/** release jars need to be signed when published to sonatype so the publisher can be verified. */
signing {
    required { isReleaseVersion }
    if (jarTasks.size() == 0)
        sign jar

    jarTasks.each{ jarTask -> sign jarTask }
    sign sourcesJar
    sign javadocJar
}

/** Effectively the same as uploadArchives, but I like this name better */
task publishArtifacts (dependsOn:uploadArchives) {
    description = 'Publish artifacts to Sonatype repository'
}