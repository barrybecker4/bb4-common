// Copyright by Barry G. Becker, 2013 - 2019. Licensed under MIT License: http://www.opensource.org/licenses/MIT

/**
 * This is common gradle build configuration for all bb4 projects.
 * Any project on github can include it using
 * apply from: 'https://raw.githubusercontent.com/bb4/bb4-common/master/bb4.gradle'
 * Both Java and Scala are fully supported. Most projects have been ported to Scala.
 */
apply plugin: 'java'
apply plugin: 'scala'
sourceCompatibility = '1.11'
targetCompatibility = '1.11'
apply plugin: 'project-report'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
defaultTasks 'build'

/**
 * Secret credentials for Sonatype and signing
 * should be defined in ~/.gradle/gradle.properties if you need them.
 * Only sign the artifacts if it is a final release.
 */
ext {
    scalaVersion = '2.13.1'
    vecmathVersion = '1.3.1'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (!hasProperty('sonatypeUsername')) {
    ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
    ext.sonatypePassword = ''
}

/** all bb4 projects use this directory layout. */
sourceSets {
    main {
        java {
            srcDir 'source'
        }
        scala {
            srcDir 'scala-source'
        }
        resources {
            srcDirs 'source', 'scala-source'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        scala {
            srcDir 'scala-test'
        }
        resources {
            srcDirs 'test', 'scala-test'
        }
    }
}

repositories {
    mavenCentral()

    // this is where thirdparty and bb4 release artifacts will come from
    maven { url "https://repo1.maven.org/maven2/" }
    // Sonatype repo also has released bb4 artifacts
    //maven { url "https://oss.sonatype.org/content/repositories/releases" }
    // The SNAPSHOT releases should come from one of these next two (did it change?)
    maven { url "https://oss.sonatype.org/content/groups/staging" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
    // some thirdparty jars from here
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
}

run {
    // allows keyboard input from cmd line
    standardInput = System.in
}

// Suppress javadoc warning when using java 8.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation" // << "-Werror"  (this will terminate compile if warnings)
            // "-Xlint:unchecked" <<
        }
    }
}

/** check for updates every build */
configurations.all {
    resolutionStrategy {
        if (!project.hasProperty('debugDeps')) {
            failOnVersionConflict()
        }
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {

    // Java dependencies
    compile "java3d:vecmath:$vecmathVersion"
    testCompile 'junit:junit:4.12'

    // Scala dependencies
    compile("org.scala-lang:scala-library:$scalaVersion") { force = true }
    testCompile 'org.scalatest:scalatest_2.13:3.0.8'

    // Used to generate html unit test report (consider switching to flexmark)
    testRuntime 'org.pegdown:pegdown:1.6.0'
}

// Have the clean task also delete the dist dir if it is there
clean.doFirst {
    delete "${rootDir}/dist/"
}

task copyToLib(dependsOn: jar, type: Copy) {
    description = "Copies the downloaded dependencies to the lib directory so they can be deployed"
    into "build/libs"
    from configurations.runtime
}

if (rootProject == project) { // https://github.com/gradle/gradle/issues/5816
    wrapper {
        gradleVersion = '5.6.2'
    }
}

/* buildScan { termsOfServiceUrl = "https://gradle.com/terms-of-service"; termsOfServiceAgree = "yes" } */
