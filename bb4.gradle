// Copyright by Barry G. Becker, 2013 - 2017. Licensed under MIT License: http://www.opensource.org/licenses/MIT

/**
 * This is common gradle build configuration for all bb4 projects.
 * Any project on github can include it using
 * apply from: 'https://raw.github.com/barrybecker4/bb4-common/master/bb4.gradle'
 * Currently in the process of porting from java to scala, so both languages are fully supported.
 */
apply plugin: 'java'
apply plugin: 'scala'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
apply plugin: 'project-report'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
defaultTasks 'build'

/**
 * Secret credentials for Sonatype and signing
 * should be defined in ~/.gradle/gradle.properties if you need them.
 * Only sign the artifacts if it is a final release.
 */
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (!hasProperty('sonatypeUsername')) {
	ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
	ext.sonatypePassword = ''
}

/** all bb4 projects use this directory layout. */
sourceSets {
    main {
        java {
            srcDir 'source'
        }
        scala {
            srcDir 'scala-source'
        }
        resources {
            srcDir 'source'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        scala {
            srcDir 'scala-test'
        }
        resources {
            srcDir 'test'
        }
    }
}

repositories {
    mavenCentral()

    // this is where bb4 release artifacts will come from
    maven { url "http://repo1.maven.org/maven2/" }
    // this is where SNAPSHOT releases will come from
    maven { url "https://oss.sonatype.org/content/groups/staging" }
    // some thirdparty jars from here
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
}

// Suppress javadoc warning when using java 8.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

/** check for updates every build */
configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    // Java dependencies
    compile 'java3d:vecmath:1.3.1'
    testCompile 'junit:junit:4.11'

    // Scala dependencies
    compile('org.scala-lang:scala-library:2.12.2') { force = true }
    testCompile 'org.scalatest:scalatest_2.12:3.0.1'
    // Used to generate html unit test report (consider switching to flexmark)
    testRuntime 'org.pegdown:pegdown:1.6.0'
}

task copyToLib(dependsOn: jar, type: Copy) {
    description = "Copies the downloaded dependencies to the lib directory so they can be deployed"
    into "build/libs"
    from configurations.runtime
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}